ue--[[
    Script Lua Roblox ini dimodifikasi untuk menambahkan fitur-fitur ESP (Box, Skeleton, Tracer)
    ke dalam GUI yang sudah ada. Fitur asli seperti Teleport, Copy Position, dan WalkSpeed
    tetap dipertahankan.

    Penambahan fitur:
    - ESP Box: Kotak di sekitar karakter musuh.
    - ESP Skeleton: Garis-garis yang membentuk kerangka karakter musuh.
    - ESP Tracer: Garis yang ditarik dari karakter pemain ke musuh.

    Visual ESP akan diperbarui setiap frame menggunakan RunService.Heartbeat.
    Tombol switch ditambahkan untuk mengaktifkan dan menonaktifkan setiap fitur.
--]]

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "NeroXGivy"
screenGui.Parent = playerGui
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Main Container Frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 220, 0, 420) -- Ukuran GUI diperbesar untuk menampung fitur baru
mainFrame.Position = UDim2.new(0.05, 0, 0.3, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
mainFrame.BackgroundTransparency = 0.2
mainFrame.ClipsDescendants = true

-- Add rounded corners
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 12)
corner.Parent = mainFrame

mainFrame.Parent = screenGui

-- Title Bar
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.Position = UDim2.new(0, 0, 0, 0)
titleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
titleBar.BackgroundTransparency = 0.3
titleBar.BorderSizePixel = 0

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 12)
titleCorner.Parent = titleBar

titleBar.Parent = mainFrame

-- Title Text
local title = Instance.new("TextLabel")
title.Size = UDim2.new(0, 120, 1, 0)
title.Position = UDim2.new(0, 10, 0, 0)
title.Text = "NeroXGivy"
title.Font = Enum.Font.GothamBold
title.TextSize = 14
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.BackgroundTransparency = 1
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = titleBar

-- Close Button
local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 30, 0, 30)
closeBtn.Position = UDim2.new(1, -30, 0, 0)
closeBtn.Text = "Ã—"
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 18
closeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
closeBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
closeBtn.BackgroundTransparency = 0.5
closeBtn.BorderSizePixel = 0

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 12)
closeCorner.Parent = closeBtn

closeBtn.Parent = titleBar

-- Minimize Button
local miniBtn = Instance.new("TextButton")
miniBtn.Size = UDim2.new(0, 30, 0, 30)
miniBtn.Position = UDim2.new(1, -60, 0, 0)
miniBtn.Text = "-"
miniBtn.Font = Enum.Font.GothamBold
miniBtn.TextSize = 16
miniBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
miniBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
miniBtn.BackgroundTransparency = 0.5
miniBtn.BorderSizePixel = 0

local miniCorner = Instance.new("UICorner")
miniCorner.CornerRadius = UDim.new(0, 12)
miniCorner.Parent = miniBtn

miniBtn.Parent = titleBar

-- Content Frame
local content = Instance.new("Frame")
content.Size = UDim2.new(1, -20, 1, -40)
content.Position = UDim2.new(0, 10, 0, 35)
content.BackgroundTransparency = 1
content.Parent = mainFrame

-- Use a UIListLayout to organize options
local layout = Instance.new("UIListLayout")
layout.Padding = UDim.new(0, 5)
layout.SortOrder = Enum.SortOrder.LayoutOrder
layout.Parent = content

-- Coordinates Section Title
local coordTitle = Instance.new("TextLabel")
coordTitle.Size = UDim2.new(1, 0, 0, 20)
coordTitle.Position = UDim2.new(0, 0, 0, 0)
coordTitle.Text = "Coordinates"
coordTitle.Font = Enum.Font.Gotham
coordTitle.TextSize = 12
coordTitle.TextColor3 = Color3.fromRGB(200, 200, 200)
coordTitle.BackgroundTransparency = 1
coordTitle.TextXAlignment = Enum.TextXAlignment.Left
coordTitle.LayoutOrder = 1
coordTitle.Parent = content

-- Coordinates Input
local coordBox = Instance.new("TextBox")
coordBox.Size = UDim2.new(1, 0, 0, 30)
coordBox.PlaceholderText = "X, Y, Z"
coordBox.Font = Enum.Font.Gotham
coordBox.TextSize = 12
coordBox.Text = ""
coordBox.TextColor3 = Color3.fromRGB(255, 255, 255)
coordBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
coordBox.BackgroundTransparency = 0.8
coordBox.BorderSizePixel = 0
coordBox.LayoutOrder = 2

local coordCorner = Instance.new("UICorner")
coordCorner.CornerRadius = UDim.new(0, 8)
coordCorner.Parent = coordBox

coordBox.Parent = content

-- Teleport Button
local tpBtn = Instance.new("TextButton")
tpBtn.Size = UDim2.new(1, 0, 0, 30)
tpBtn.Text = "Teleport"
tpBtn.Font = Enum.Font.Gotham
tpBtn.TextSize = 12
tpBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
tpBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
tpBtn.BackgroundTransparency = 0.8
tpBtn.BorderSizePixel = 0
tpBtn.LayoutOrder = 3

local tpCorner = Instance.new("UICorner")
tpCorner.CornerRadius = UDim.new(0, 8)
tpCorner.Parent = tpBtn

tpBtn.Parent = content

-- Copy Position Button
local copyBtn = Instance.new("TextButton")
copyBtn.Size = UDim2.new(1, 0, 0, 30)
copyBtn.Text = "Copy Position"
copyBtn.Font = Enum.Font.Gotham
copyBtn.TextSize = 12
copyBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
copyBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
copyBtn.BackgroundTransparency = 0.8
copyBtn.BorderSizePixel = 0
copyBtn.LayoutOrder = 4

local copyCorner = Instance.new("UICorner")
copyCorner.CornerRadius = UDim.new(0, 8)
copyCorner.Parent = copyBtn

copyBtn.Parent = content

-- WalkSpeed Section Title
local wsTitle = Instance.new("TextLabel")
wsTitle.Size = UDim2.new(1, 0, 0, 20)
wsTitle.Text = "WalkSpeed"
wsTitle.Font = Enum.Font.Gotham
wsTitle.TextSize = 12
wsTitle.TextColor3 = Color3.fromRGB(200, 200, 200)
wsTitle.BackgroundTransparency = 1
wsTitle.TextXAlignment = Enum.TextXAlignment.Left
wsTitle.LayoutOrder = 5
wsTitle.Parent = content

-- WalkSpeed Input
local wsBox = Instance.new("TextBox")
wsBox.Size = UDim2.new(1, 0, 0, 30)
wsBox.PlaceholderText = "Speed Value"
wsBox.Font = Enum.Font.Gotham
wsBox.TextSize = 12
wsBox.Text = ""
wsBox.TextColor3 = Color3.fromRGB(255, 255, 255)
wsBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
wsBox.BackgroundTransparency = 0.8
wsBox.BorderSizePixel = 0
wsBox.LayoutOrder = 6

local wsCorner = Instance.new("UICorner")
wsCorner.CornerRadius = UDim.new(0, 8)
wsCorner.Parent = wsBox

wsBox.Parent = content

-- WalkSpeed Toggle Button
local wsBtn = Instance.new("TextButton")
wsBtn.Size = UDim2.new(1, 0, 0, 30)
wsBtn.Text = "WalkSpeed: OFF"
wsBtn.Font = Enum.Font.Gotham
wsBtn.TextSize = 12
wsBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
wsBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
wsBtn.BackgroundTransparency = 0.8
wsBtn.BorderSizePixel = 0
wsBtn.LayoutOrder = 7

local wsBtnCorner = Instance.new("UICorner")
wsBtnCorner.CornerRadius = UDim.new(0, 8)
wsBtnCorner.Parent = wsBtn

wsBtn.Parent = content

-- ESP Section Title
local espTitle = Instance.new("TextLabel")
espTitle.Size = UDim2.new(1, 0, 0, 20)
espTitle.Text = "ESP"
espTitle.Font = Enum.Font.Gotham
espTitle.TextSize = 12
espTitle.TextColor3 = Color3.fromRGB(200, 200, 200)
espTitle.BackgroundTransparency = 1
espTitle.TextXAlignment = Enum.TextXAlignment.Left
espTitle.LayoutOrder = 8
espTitle.Parent = content

-- Ghost Icon (Minimized State)
local ghostBtn = Instance.new("TextButton")
ghostBtn.Size = UDim2.new(0, 40, 0, 40)
ghostBtn.Position = UDim2.new(0.05, 0, 0.3, 0)
ghostBtn.Text = "ðŸ‘»"
ghostBtn.Font = Enum.Font.GothamBold
ghostBtn.TextSize = 20
ghostBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
ghostBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
ghostBtn.BackgroundTransparency = 0.2
ghostBtn.Visible = false
ghostBtn.BorderSizePixel = 0

local ghostCorner = Instance.new("UICorner")
ghostCorner.CornerRadius = UDim.new(0, 12)
ghostCorner.Parent = ghostBtn

ghostBtn.Parent = screenGui

-- FUNGSI BARU UNTUK ESP

local espBoxEnabled = false
local espSkeletonEnabled = false
local espTracerEnabled = false
local visuals = {}

local function createOptionToggle(parent, name, layoutOrder, enabledVariable, callback)
    local optionFrame = Instance.new("Frame")
    optionFrame.Size = UDim2.new(1, 0, 0, 30)
    optionFrame.BackgroundTransparency = 1
    optionFrame.LayoutOrder = layoutOrder
    optionFrame.Parent = parent

    -- Label
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.6, 0, 1, 0)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.Text = name
    label.Font = Enum.Font.Gotham
    label.TextSize = 12
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.BackgroundTransparency = 1
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = optionFrame

    -- Switch Button
    local switchBtn = Instance.new("TextButton")
    switchBtn.Size = UDim2.new(0.4, 0, 1, 0)
    switchBtn.Position = UDim2.new(0.6, 0, 0, 0)
    switchBtn.Text = "OFF"
    switchBtn.Font = Enum.Font.Gotham
    switchBtn.TextSize = 12
    switchBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    switchBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    switchBtn.BackgroundTransparency = 0.8
    switchBtn.BorderSizePixel = 0

    local switchCorner = Instance.new("UICorner")
    switchCorner.CornerRadius = UDim.new(0, 8)
    switchCorner.Parent = switchBtn

    switchBtn.Parent = optionFrame

    local currentState = false
    switchBtn.MouseButton1Click:Connect(function()
        currentState = not currentState
        if currentState then
            switchBtn.Text = "ON"
            switchBtn.BackgroundColor3 = Color3.fromRGB(150, 255, 150)
            switchBtn.BackgroundTransparency = 0.5
        else
            switchBtn.Text = "OFF"
            switchBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            switchBtn.BackgroundTransparency = 0.8
        end
        callback(currentState)
    end)
end

-- Create ESP Box Toggle
createOptionToggle(content, "ESP Box", 9, espBoxEnabled, function(state)
    espBoxEnabled = state
    if not state then
        for _, v in pairs(visuals) do
            if v.Box then v.Box:Destroy() end
            v.Box = nil
        end
    end
end)

-- Create ESP Skeleton Toggle
createOptionToggle(content, "ESP Skeleton", 10, espSkeletonEnabled, function(state)
    espSkeletonEnabled = state
    if not state then
        for _, v in pairs(visuals) do
            if v.Skeleton then
                for _, part in pairs(v.Skeleton) do
                    part:Destroy()
                end
            end
            v.Skeleton = nil
        end
    end
end)

-- Create ESP Tracer Toggle
createOptionToggle(content, "ESP Tracer", 11, espTracerEnabled, function(state)
    espTracerEnabled = state
    if not state then
        for _, v in pairs(visuals) do
            if v.Tracer then v.Tracer:Destroy() end
            v.Tracer = nil
        end
    end
end)


-- ESP Functions

local function createBox(target)
    local box = Instance.new("BillboardGui")
    box.Size = UDim2.new(0, 100, 0, 100)
    box.AlwaysOnTop = true
    box.Adornee = target.HumanoidRootPart
    box.Parent = screenGui

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.BackgroundTransparency = 1
    frame.BorderSizePixel = 2
    frame.BorderColor3 = Color3.fromRGB(255, 0, 0)
    frame.Parent = box

    return box
end

local function createTracer(target)
    local tracer = Instance.new("Part")
    tracer.Anchored = true
    tracer.CanCollide = false
    tracer.BrickColor = BrickColor.new("Crimson")
    tracer.Transparency = 0.5
    tracer.Size = Vector3.new(0.1, 0.1, 0.1)
    tracer.TopSurface = Enum.SurfaceType.Smooth
    tracer.BottomSurface = Enum.SurfaceType.Smooth
    tracer.Parent = workspace.CurrentCamera

    return tracer
end

local function createSkeleton(target)
    local skeleton = {}
    local parts = {
        {"Head", "Torso"},
        {"Left Arm", "Torso"},
        {"Right Arm", "Torso"},
        {"Left Leg", "Torso"},
        {"Right Leg", "Torso"},
    }

    local function createLine(p1, p2)
        local line = Instance.new("Part")
        line.Anchored = true
        line.CanCollide = false
        line.BrickColor = BrickColor.new("Bright yellow")
        line.Transparency = 0.5
        line.TopSurface = Enum.SurfaceType.Smooth
        line.BottomSurface = Enum.SurfaceType.Smooth
        line.Parent = workspace.CurrentCamera
        return line
    end

    for _, p in pairs(parts) do
        local part1 = target:FindFirstChild(p[1])
        local part2 = target:FindFirstChild(p[2])
        if part1 and part2 then
            local line = createLine(part1, part2)
            table.insert(skeleton, line)
        end
    end
    return skeleton
end

local function updateESP()
    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= player and plr.Character and plr.Character:FindFirstChildOfClass("Humanoid") and plr.Character:FindFirstChildOfClass("Humanoid").Health > 0 then
            local target = plr.Character
            local rootPart = target.HumanoidRootPart

            if not visuals[plr.UserId] then
                visuals[plr.UserId] = {}
            end

            -- Update Box ESP
            if espBoxEnabled then
                if not visuals[plr.UserId].Box then
                    visuals[plr.UserId].Box = createBox(target)
                end
                local box = visuals[plr.UserId].Box
                local size = (target:GetBoundingBox().CFrame * CFrame.new(0, 0, -target:GetBoundingBox().Size.Z / 2)).p
                local pos = rootPart.Position
                local distance = (pos - player.Character.HumanoidRootPart.Position).Magnitude
                box.Size = UDim2.new(0, distance * 50, 0, distance * 50)
                box.StudsOffset = Vector3.new(0, -target:GetBoundingBox().Size.Y / 2, 0)
            elseif visuals[plr.UserId].Box then
                visuals[plr.UserId].Box:Destroy()
                visuals[plr.UserId].Box = nil
            end

            -- Update Tracer ESP
            if espTracerEnabled then
                if not visuals[plr.UserId].Tracer then
                    visuals[plr.UserId].Tracer = createTracer(target)
                end
                local tracer = visuals[plr.UserId].Tracer
                local p1 = player.Character.HumanoidRootPart.Position
                local p2 = target.HumanoidRootPart.Position
                local distance = (p1 - p2).Magnitude
                tracer.Size = Vector3.new(0.1, 0.1, distance)
                tracer.CFrame = CFrame.new(p1, p2) * CFrame.new(0, 0, -distance / 2)
            elseif visuals[plr.UserId].Tracer then
                visuals[plr.UserId].Tracer:Destroy()
                visuals[plr.UserId].Tracer = nil
            end

            -- Update Skeleton ESP
            if espSkeletonEnabled then
                if not visuals[plr.UserId].Skeleton then
                    visuals[plr.UserId].Skeleton = createSkeleton(target)
                end
                local skeleton = visuals[plr.UserId].Skeleton
                local parts = {
                    {"Head", "Torso"},
                    {"Left Arm", "Torso"},
                    {"Right Arm", "Torso"},
                    {"Left Leg", "Torso"},
                    {"Right Leg", "Torso"},
                }

                local function updateLine(line, p1, p2)
                    local distance = (p1.Position - p2.Position).Magnitude
                    line.Size = Vector3.new(0.1, 0.1, distance)
                    line.CFrame = CFrame.new(p1.Position, p2.Position) * CFrame.new(0, 0, -distance / 2)
                end

                for i, p in pairs(parts) do
                    local part1 = target:FindFirstChild(p[1])
                    local part2 = target:FindFirstChild(p[2])
                    if part1 and part2 and skeleton[i] then
                        updateLine(skeleton[i], part1, part2)
                    end
                end
            elseif visuals[plr.UserId].Skeleton then
                for _, part in pairs(visuals[plr.UserId].Skeleton) do
                    part:Destroy()
                end
                visuals[plr.UserId].Skeleton = nil
            end
        else
            -- Clean up visuals if the player is no longer valid
            if visuals[plr.UserId] then
                for _, visual in pairs(visuals[plr.UserId]) do
                    if typeof(visual) == "table" then
                        for _, part in pairs(visual) do
                            if part and part.Parent then
                                part:Destroy()
                            end
                        end
                    elseif visual and visual.Parent then
                        visual:Destroy()
                    end
                end
                visuals[plr.UserId] = nil
            end
        end
    end
end

-- Connect the update loop to RunService.Heartbeat
local heartbeatConnection = RunService.Heartbeat:Connect(updateESP)

-- Clean up visuals when a player leaves
Players.PlayerRemoving:Connect(function(plr)
    if visuals[plr.UserId] then
        for _, visual in pairs(visuals[plr.UserId]) do
            if typeof(visual) == "table" then
                for _, part in pairs(visual) do
                    if part and part.Parent then
                        part:Destroy()
                    end
                end
            elseif visual and visual.Parent then
                visual:Destroy()
            end
        end
        visuals[plr.UserId] = nil
    end
end)

-- FUNGSI ASLI
local enabledWS = false

-- Teleport Function
tpBtn.MouseButton1Click:Connect(function()
    local coords = coordBox.Text:split(",")
    if #coords == 3 then
        local x, y, z = tonumber(coords[1]), tonumber(coords[2]), tonumber(coords[3])
        if x and y and z then
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                player.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(x, y, z))
            end
        end
    end
end)

-- Copy Position Function
copyBtn.MouseButton1Click:Connect(function()
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local pos = player.Character.HumanoidRootPart.Position
        setclipboard(string.format("%d, %d, %d", math.floor(pos.X), math.floor(pos.Y), math.floor(pos.Z)))
    end
end)

-- WalkSpeed Toggle Function
wsBtn.MouseButton1Click:Connect(function()
    enabledWS = not enabledWS
    if enabledWS then
        wsBtn.Text = "WalkSpeed: ON"
        local wsVal = tonumber(wsBox.Text)
        if wsVal and player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
            player.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = wsVal
        end
    else
        wsBtn.Text = "WalkSpeed: OFF"
        if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
            player.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = 16
        end
    end
end)

-- Close Button Function
closeBtn.MouseButton1Click:Connect(function()
    heartbeatConnection:Disconnect()
    screenGui:Destroy()
    for _, visual in pairs(visuals) do
        if typeof(visual) == "table" then
            for _, part in pairs(visual) do
                if part and part.Parent then
                    part:Destroy()
                end
            end
        elseif visual and visual.Parent then
            visual:Destroy()
        end
    end
end)

-- Minimize Button Function
local isMinimized = false
miniBtn.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    if isMinimized then
        mainFrame.Visible = false
        ghostBtn.Visible = true
    else
        mainFrame.Visible = true
        ghostBtn.Visible = false
    end
end)

-- Ghost Button Function (restore)
ghostBtn.MouseButton1Click:Connect(Function()
    mainFrame.Visible = true
    ghostBtn.Visible = false
    isMinimized = false
end)

-- Make window draggable
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    mainFrame.Position = UDim2.new(startPos.X. Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.qY)
 end

titleBar. InputBegan: Connect(function(input)
    if input. User InputType == Enum. User InputType.MouseButton1 or input.UserInputType == Enum. User InputType. Touch then 
         dragging = true 
         dragStart = input.Position 
         startPos = mainFrame.Position

         input.Changed:Connect(Function()
             if input.UserInputState == Enum.UserInputState.End then
                 dragging = false
             end
         end)
     end
 end)
titleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = Input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)
